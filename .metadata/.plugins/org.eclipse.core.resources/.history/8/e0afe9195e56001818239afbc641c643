/*
 * uart.h
 *
 *  Created on: Mar 16, 2018
 *      Author: Cursos
 */


#ifndef SOURCE_UART_H_
#define SOURCE_UART_H_

#include "FreeRTOS.h"

#include "queue.h"

#include "semphr.h"
#include "task.h"

#include "fsl_uart.h"
#include "pin_mux.h"
#include "clock_config.h"
#include "event_groups.h"


/*******************************************************************************
 * Definitions
 ******************************************************************************/
#define UART_BAUDRATE 115200U
#define UART_BAUDRATE_B 9600U

#define RTOS_UART_COMPLETE 0x1

typedef struct uart_params{
	 UART_Type *base;               /*!< UART base address */
     uart_transfer_t txTransfer;    /*!< TX transfer structure */
	 uart_transfer_t rxTransfer;    /*!< RX transfer structure */
	 SemaphoreHandle_t rxSemaphore; /*!< RX semaphore for resource sharing */
	 SemaphoreHandle_t txSemaphore; /*!< TX semaphore for resource sharing */
	 EventGroupHandle_t rxEvent;    /*!< RX completion event */
	 EventGroupHandle_t txEvent;    /*!< TX completion event */
	 void *t_state;                 /*!< Transactional state of the underlying driver */
}uart_handle_config;

/*******************************************************************************
 * Prototypes
 ******************************************************************************/
uint8_t* UART_Echo(void);
void uart_init(UART_Type * base, uart_handle_config * handle);
void UART_userSend(uart_handle_config *handle, uint8_t *buffer, uint32_t length);
void UART_userReceive(uart_handle_config *handle, const uint8_t *buffer, uint32_t length);





#endif /* SOURCE_UART_H_ */
